name: Release Build

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write
  issues: write

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['8.2', '8.3', '8.4']
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: phpize
          
      - name: Build extension
        run: |
          phpize
          ./configure
          make
          
      - name: Create dist directory
        run: mkdir -p dist/releases/${{ github.ref_name }}/linux/php${{ matrix.php-version }}
        
      - name: Copy extension
        run: |
          cp modules/fastcsv.so "dist/releases/${{ github.ref_name }}/linux/php${{ matrix.php-version }}/fastcsv.so"
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-builds-php${{ matrix.php-version }}
          path: dist/releases/${{ github.ref_name }}/linux/php${{ matrix.php-version }}
          if-no-files-found: warn
          compression-level: 6
          overwrite: true
          include-hidden-files: false
          
  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        php-version: ['8.2', '8.3', '8.4']
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: phpize
          
      - name: Build extension
        run: |
          phpize
          ./configure
          make
          
      - name: Create dist directory
        run: mkdir -p dist/releases/${{ github.ref_name }}/macos/php${{ matrix.php-version }}
        
      - name: Copy extension
        run: |
          cp modules/fastcsv.so "dist/releases/${{ github.ref_name }}/macos/php${{ matrix.php-version }}/fastcsv.so"
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-builds-php${{ matrix.php-version }}
          path: dist/releases/${{ github.ref_name }}/macos/php${{ matrix.php-version }}
          if-no-files-found: warn
          compression-level: 6
          overwrite: true
          include-hidden-files: false

  create-release:
    needs: [build-linux, build-macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
          
      - name: Generate changelog
        id: changelog
        run: |
          echo "Generating changelog for tag ${{ github.ref_name }}"
          
          # Get the previous tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 ${{ github.ref_name }}^ 2>/dev/null || echo "")
          
          if [ -z "$PREVIOUS_TAG" ]; then
            echo "No previous tag found, getting all commits"
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" --no-merges)
          else
            echo "Getting commits since $PREVIOUS_TAG"
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" --no-merges $PREVIOUS_TAG..${{ github.ref_name }})
          fi
          
          # Escape newlines for GitHub Actions
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
          
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          echo "Changelog generated with $(echo "$CHANGELOG" | wc -l) entries"
          
      - name: Create release directories
        run: |
          mkdir -p dist/releases/${{ github.ref_name }}/{linux,macos,windows,final}
          
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/releases/${{ github.ref_name }}
          
      - name: Debug - List all downloaded artifacts
        run: |
          echo "=== Full directory structure ==="
          find dist/releases/${{ github.ref_name }} -type f
          echo "=== End directory structure ==="
          
      - name: Prepare release files
        run: |
          echo "=== Starting file preparation ==="
          
          echo "Looking for .so files..."
          find dist/releases/${{ github.ref_name }} -name "*.so"
          
          echo "Looking for .dll files..."
          find dist/releases/${{ github.ref_name }} -name "*.dll"
          
          echo "=== Processing Linux builds ==="
          for artifact_dir in dist/releases/${{ github.ref_name }}/linux-builds-php*; do
            if [ -d "$artifact_dir" ]; then
              php_ver=$(basename "$artifact_dir" | grep -o 'php[0-9]\.[0-9]' | sed 's/php//')
              echo "Processing Linux artifact directory: $artifact_dir for PHP $php_ver"
              for file in $(find "$artifact_dir" -name "*.so"); do
                echo "Found Linux build: $file"
                cp -v "$file" "dist/releases/${{ github.ref_name }}/final/fastcsv-linux-php${php_ver}.so"
              done
            fi
          done
          
          echo "=== Processing macOS builds ==="
          for artifact_dir in dist/releases/${{ github.ref_name }}/macos-builds-php*; do
            if [ -d "$artifact_dir" ]; then
              php_ver=$(basename "$artifact_dir" | grep -o 'php[0-9]\.[0-9]' | sed 's/php//')
              echo "Processing macOS artifact directory: $artifact_dir for PHP $php_ver"
              for file in $(find "$artifact_dir" -name "*.so"); do
                echo "Found macOS build: $file"
                cp -v "$file" "dist/releases/${{ github.ref_name }}/final/fastcsv-macos-php${php_ver}.so"
              done
            fi
          done
          
          echo "=== Processing Windows builds ==="
          for artifact_dir in dist/releases/${{ github.ref_name }}/windows-builds-php*; do
            if [ -d "$artifact_dir" ]; then
              # Extract PHP version, architecture, and thread safety from directory name
              dir_name=$(basename "$artifact_dir")
              php_ver=$(echo "$dir_name" | grep -o 'php[0-9]\.[0-9]' | sed 's/php//')
              arch=$(echo "$dir_name" | grep -o 'x86_64\|x86' | head -1)
              ts=$(echo "$dir_name" | grep -o 'ts\|nts' | head -1)
              
              echo "Processing Windows artifact directory: $artifact_dir for PHP $php_ver $arch $ts"
              for file in $(find "$artifact_dir" -name "*.dll"); do
                echo "Found Windows build: $file"
                cp -v "$file" "dist/releases/${{ github.ref_name }}/final/fastcsv-windows-php${php_ver}-${arch}-${ts}.dll"
              done
            fi
          done
          
          echo "=== Files ready for release ==="
          ls -la dist/releases/${{ github.ref_name }}/final/ || echo "No files in final directory"
          
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            dist/releases/${{ github.ref_name }}/final/fastcsv-linux-php*.so
            dist/releases/${{ github.ref_name }}/final/fastcsv-macos-php*.so
            dist/releases/${{ github.ref_name }}/final/fastcsv-windows-php*.dll
          name: FastCSV ${{ github.ref_name }}
          body: |
            ## 🚀 FastCSV Extension ${{ github.ref_name }}
            
            A high-performance CSV parsing extension for PHP.
            
            ### 📦 Available Builds
            
            #### Linux:
            - PHP 8.2: `fastcsv-linux-php8.2.so`
            - PHP 8.3: `fastcsv-linux-php8.3.so`
            - PHP 8.4: `fastcsv-linux-php8.4.so`
            
            #### macOS:
            - PHP 8.2: `fastcsv-macos-php8.2.so`
            - PHP 8.3: `fastcsv-macos-php8.3.so`
            - PHP 8.4: `fastcsv-macos-php8.4.so`
            
            #### Windows:
            - PHP 8.2 x86_64 TS: `fastcsv-windows-php8.2-x86_64-ts.dll`
            - PHP 8.2 x86_64 NTS: `fastcsv-windows-php8.2-x86_64-nts.dll`
            - PHP 8.3 x86_64 TS: `fastcsv-windows-php8.3-x86_64-ts.dll`
            - PHP 8.3 x86_64 NTS: `fastcsv-windows-php8.3-x86_64-nts.dll`
            - PHP 8.4 x86_64 TS: `fastcsv-windows-php8.4-x86_64-ts.dll`
            - PHP 8.4 x86_64 NTS: `fastcsv-windows-php8.4-x86_64-nts.dll`
            
            ### 🔧 Installation
            
            #### Linux/macOS:
            1. **Download** the appropriate file for your platform and PHP version
            2. **Rename** the downloaded file to `fastcsv.so`
            3. **Copy** to your PHP extensions directory:
               ```bash
               # Find your PHP extension directory
               php -i | grep extension_dir
               
               # Copy and rename (example for Linux PHP 8.2)
               cp fastcsv-linux-php8.2.so /path/to/extension_dir/fastcsv.so
               ```
            4. **Configure** your php.ini:
               ```ini
               extension=fastcsv.so
               ```
            5. **Restart** your PHP service/server
            
            #### Windows:
            1. **Download** the appropriate DLL for your PHP version and thread safety
            2. **Rename** the downloaded file to `php_fastcsv.dll`
            3. **Copy** to your PHP extensions directory:
               ```cmd
               # Find your PHP extension directory
               php -i | findstr extension_dir
               
               # Copy and rename (example for PHP 8.2 TS)
               copy fastcsv-windows-php8.2-x86_64-ts.dll C:\path\to\ext\php_fastcsv.dll
               ```
            4. **Configure** your php.ini:
               ```ini
               extension=php_fastcsv.dll
               ```
            5. **Restart** your web server
            
            ### ✅ Verify Installation
            ```bash
            # Check if the extension is loaded
            php -m | grep fastcsv
            
            # Test basic functionality
            php -r "var_dump(extension_loaded('fastcsv'));"
            ```
            
            ### 📝 Changes in this Release
            
            ${{ steps.changelog.outputs.changelog }}
            
            ### 🐛 Issues & Support
            
            If you encounter any issues, please [open an issue](https://github.com/${{ github.repository }}/issues) on GitHub.
          draft: false
          prerelease: false
          generate_release_notes: false
          fail_on_unmatched_files: false 