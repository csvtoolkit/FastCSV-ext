name: Build and Test FastCSV on Windows
on:
  push:
  pull_request:
  release:
    types: [created]
jobs:
  get-extension-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.extension-matrix.outputs.matrix }}
    steps:
      - name: Checkout fastcsv
        uses: actions/checkout@v4
      - name: Get the extension matrix
        id: extension-matrix
        uses: php/php-windows-builder/extension-matrix@v1
        with:
          php-version-list: '8.2, 8.3, 8.4'

  windows:
    needs: get-extension-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.get-extension-matrix.outputs.matrix)}}
    steps:
      - name: Checkout fastcsv
        uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Verify submodule files (Windows)
        run: |
          echo "Checking repository structure..."
          Get-ChildItem -Path . -Name
          echo ""
          echo "Checking if lib directory exists:"
          if (Test-Path "lib") {
            echo "lib directory found"
            Get-ChildItem -Path "lib" -Name
          } else {
            echo "lib directory missing!"
          }
          echo ""
          echo "Checking main extension files:"
          if (Test-Path "fastcsv.c") { echo "fastcsv.c exists" } else { echo "fastcsv.c missing" }
          if (Test-Path "php_fastcsv.h") { echo "php_fastcsv.h exists" } else { echo "php_fastcsv.h missing" }
          if (Test-Path "config.w32") { echo "config.w32 exists" } else { echo "config.w32 missing" }
          echo ""
          echo "Checking specific lib source files:"
          $libFiles = @("arena.c", "csv_config.c", "csv_reader.c", "csv_writer.c", "csv_parser.c", "csv_utils.c")
          foreach ($file in $libFiles) {
            if (Test-Path "lib\$file") { 
              echo "$file exists" 
            } else { 
              echo "$file missing"
              exit 1
            }
          }
        shell: pwsh
          
      - name: Build the extension
        uses: php/php-windows-builder/extension@v1
        with:
          php-version: ${{ matrix.php-version }}
          arch: ${{ matrix.arch }}
          ts: ${{ matrix.ts }}
          test-workers: 4  

  release:
    runs-on: ubuntu-latest
    needs: windows
    if: ${{ github.event_name == 'release' }}
    steps:
      - name: Upload artifact to the release
        uses: php/php-windows-builder/release@v1
        with:
          release: ${{ github.event.release.tag_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
