name: Windows Build for Release

on:
   push:
      tags:
         - 'v*.*.*'

permissions:
   contents: write

jobs:
   get-extension-matrix:
      runs-on: ubuntu-latest
      outputs:
         matrix: ${{ steps.extension-matrix.outputs.matrix }}
      steps:
         - name: Checkout
           uses: actions/checkout@v4
           with:
              submodules: recursive
         - name: Get the extension matrix
           id: extension-matrix
           uses: php/php-windows-builder/extension-matrix@v1
           with:
              extension-name: fastcsv
   
   build-windows:
      needs: get-extension-matrix
      runs-on: ${{ matrix.os }}
      strategy:
         matrix: ${{fromJson(needs.get-extension-matrix.outputs.matrix)}}
      steps:
         - name: Checkout
           uses: actions/checkout@v4
           with:
              submodules: recursive
         - name: Build the extension
           uses: php/php-windows-builder/extension@v1
           with:
              php-version: ${{ matrix.php-version }}
              arch: ${{ matrix.arch }}
              ts: ${{ matrix.ts }}
              extension-name: fastcsv
         - name: Create dist directory
           run: mkdir -p dist/releases/${{ github.ref_name }}/windows/php${{ matrix.php-version }}-${{ matrix.arch }}-${{ matrix.ts }}
         - name: Copy Windows DLL
           run: |
             cp "php_fastcsv-${{ matrix.php-version }}-${{ matrix.ts }}-vs16-${{ matrix.arch }}.dll" "dist/releases/${{ github.ref_name }}/windows/php${{ matrix.php-version }}-${{ matrix.arch }}-${{ matrix.ts }}/php_fastcsv.dll"
         - name: Upload Windows artifact
           uses: actions/upload-artifact@v4
           with:
              name: windows-builds-php${{ matrix.php-version }}-${{ matrix.arch }}-${{ matrix.ts }}
              path: dist/releases/${{ github.ref_name }}/windows/php${{ matrix.php-version }}-${{ matrix.arch }}-${{ matrix.ts }}
              if-no-files-found: warn
              compression-level: 6
              overwrite: true
              include-hidden-files: false

   create-windows-release:
      needs: build-windows
      runs-on: ubuntu-latest
      steps:
         - uses: actions/checkout@v4
           with:
              submodules: true
              fetch-depth: 0
              
         - name: Create release directories
           run: |
             mkdir -p dist/releases/${{ github.ref_name }}/windows/final
             
         - name: Download Windows artifacts
           uses: actions/download-artifact@v4
           with:
              path: dist/releases/${{ github.ref_name }}/windows
              
         - name: Prepare Windows release files
           run: |
             echo "=== Processing Windows builds ==="
             for artifact_dir in dist/releases/${{ github.ref_name }}/windows/windows-builds-php*; do
               if [ -d "$artifact_dir" ]; then
                 # Extract PHP version, architecture, and thread safety from directory name
                 dir_name=$(basename "$artifact_dir")
                 php_ver=$(echo "$dir_name" | grep -o 'php[0-9]\.[0-9]' | sed 's/php//')
                 arch=$(echo "$dir_name" | grep -o 'x86_64\|x86' | head -1)
                 ts=$(echo "$dir_name" | grep -o 'ts\|nts' | head -1)
                 
                 echo "Processing Windows artifact directory: $artifact_dir for PHP $php_ver $arch $ts"
                 for file in $(find "$artifact_dir" -name "*.dll"); do
                   echo "Found Windows build: $file"
                   cp -v "$file" "dist/releases/${{ github.ref_name }}/windows/final/fastcsv-windows-php${php_ver}-${arch}-${ts}.dll"
                 done
               fi
             done
             
             echo "=== Windows files ready for release ==="
             ls -la dist/releases/${{ github.ref_name }}/windows/final/ || echo "No files in final directory"
             
         - name: Create Windows Release
           uses: softprops/action-gh-release@v1
           env:
             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
           with:
             files: dist/releases/${{ github.ref_name }}/windows/final/fastcsv-windows-php*.dll
             name: FastCSV Windows ${{ github.ref_name }}
             body: |
               ## üöÄ FastCSV Windows Extension ${{ github.ref_name }}
               
               Windows builds for the high-performance CSV parsing extension for PHP.
               
               ### üì¶ Available Windows Builds
               
               - PHP 8.2 x86_64 TS: `fastcsv-windows-php8.2-x86_64-ts.dll`
               - PHP 8.2 x86_64 NTS: `fastcsv-windows-php8.2-x86_64-nts.dll`
               - PHP 8.3 x86_64 TS: `fastcsv-windows-php8.3-x86_64-ts.dll`
               - PHP 8.3 x86_64 NTS: `fastcsv-windows-php8.3-x86_64-nts.dll`
               - PHP 8.4 x86_64 TS: `fastcsv-windows-php8.4-x86_64-ts.dll`
               - PHP 8.4 x86_64 NTS: `fastcsv-windows-php8.4-x86_64-nts.dll`
               
               ### üîß Windows Installation
               
               1. **Download** the appropriate DLL for your PHP version and thread safety
               2. **Rename** the downloaded file to `php_fastcsv.dll`
               3. **Copy** to your PHP extensions directory:
                  ```cmd
                  # Find your PHP extension directory
                  php -i | findstr extension_dir
                  
                  # Copy and rename (example for PHP 8.2 TS)
                  copy fastcsv-windows-php8.2-x86_64-ts.dll C:\path\to\ext\php_fastcsv.dll
                  ```
               4. **Configure** your php.ini:
                  ```ini
                  extension=php_fastcsv.dll
                  ```
               5. **Restart** your web server
               
               ### ‚úÖ Verify Installation
               ```cmd
               # Check if the extension is loaded
               php -m | findstr fastcsv
               
               # Test basic functionality
               php -r "var_dump(extension_loaded('fastcsv'));"
               ```
               
               ### üêõ Issues & Support
               
               If you encounter any issues, please [open an issue](https://github.com/${{ github.repository }}/issues) on GitHub.
             draft: false
             prerelease: false
             generate_release_notes: false
             fail_on_unmatched_files: false